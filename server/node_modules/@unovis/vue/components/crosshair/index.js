import { defineComponent as d, inject as m, computed as v, ref as f, onMounted as _, nextTick as h, onUnmounted as x, watch as u, createElementBlock as C, openBlock as k } from "vue";
import { Crosshair as i } from "@unovis/ts";
import { useForwardProps as w, arePropsEqual as y } from "../../utils/props.js";
import { crosshairAccessorKey as g } from "../../utils/context.js";
const B = { "data-vis-crosshair": "" }, q = i.selectors, A = /* @__PURE__ */ d({
  __name: "index",
  props: {
    data: {}
  },
  setup(l, { expose: p }) {
    const t = m(g), r = l, a = v(() => t.data.value ?? r.data), s = w(r), o = f();
    return _(() => {
      h(() => {
        var e;
        o.value = new i(s.value), (e = o.value) == null || e.setData(a.value), t.update(o.value);
      });
    }), x(() => {
      var e;
      (e = o.value) == null || e.destroy(), t.destroy();
    }), u(s, (e, n) => {
      var c;
      y(e, n) || (c = o.value) == null || c.setConfig(s.value);
    }), u(a, () => {
      var e;
      (e = o.value) == null || e.setData(a.value);
    }), p({
      component: o
    }), (e, n) => (k(), C("div", B));
  }
});
export {
  q as VisCrosshairSelectors,
  A as default
};
//# sourceMappingURL=index.js.map
