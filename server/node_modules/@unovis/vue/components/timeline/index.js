import { defineComponent as m, inject as d, computed as v, ref as f, onMounted as _, nextTick as x, onUnmounted as h, watch as u, createElementBlock as k, openBlock as w } from "vue";
import { Timeline as i } from "@unovis/ts";
import { useForwardProps as y, arePropsEqual as T } from "../../utils/props.js";
import { componentAccessorKey as g } from "../../utils/context.js";
const B = { "data-vis-component": "" }, j = i.selectors, q = /* @__PURE__ */ m({
  __name: "index",
  props: {
    data: {}
  },
  setup(l, { expose: p }) {
    const t = d(g), s = l, a = v(() => t.data.value ?? s.data), n = y(s), o = f();
    return _(() => {
      x(() => {
        var e;
        o.value = new i(n.value), (e = o.value) == null || e.setData(a.value), t.update(o.value);
      });
    }), h(() => {
      var e;
      (e = o.value) == null || e.destroy(), t.destroy();
    }), u(n, (e, c) => {
      var r;
      T(e, c) || (r = o.value) == null || r.setConfig(n.value);
    }), u(a, () => {
      var e;
      (e = o.value) == null || e.setData(a.value);
    }), p({
      component: o
    }), (e, c) => (w(), k("div", B));
  }
});
export {
  j as VisTimelineSelectors,
  q as default
};
//# sourceMappingURL=index.js.map
